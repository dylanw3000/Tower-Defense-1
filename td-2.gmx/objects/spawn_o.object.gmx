<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spawn_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
spawn_delay = 60;
alarm[0] = 5;

fast = 3;
fast_count = fast;

slow = 7;
slow_count = slow;

tank = 20;
tank_count = tank;

wave = 0;
wave_max = 3;

delay[0] = 60;
count[0] = 5;
out[0] = 1;

delay[1] = 10;
count[1] = 2;
out[1] = 2;

delay[2] = 40;
count[2] = 4;
out[2] = 1;

delay[3] = 120;
count[3] = 10;
out[3] = 4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
alarm[0] = delay[wave];
switch(out[wave]){
    case 1:
        tmp = instance_create(x,y,enemy_o);
        tmp.hp = 30;
        tmp.spd = 2;
        with(tmp){
            path_start(path0, spd, 0, 0);
            image_xscale = 1;
            image_yscale = image_xscale;
        }
        break;
    case 2:
        tmp = instance_create(x,y,enemy_o);
        tmp.hp = 20;
        tmp.spd = 4;
        with(tmp){
            path_start(path0, spd, 0, 0);
            image_xscale = .8;
            image_yscale = image_xscale;
        }
        break;
    case 3:
        tmp = instance_create(x,y,enemy_o);
        tmp.hp = 50;
        tmp.spd = 1;
        with(tmp){
            path_start(path0, spd, 0, 0);
            image_xscale = 1.2;
            image_yscale = image_xscale;
        }
        break;
    case 4:
        tmp = instance_create(x,y,enemy_o);
        tmp.hp = 200;
        tmp.spd = .5;
        with(tmp){
            path_start(path0, spd, 0, 0);
            image_xscale = 1.5;
            image_yscale = image_xscale;
        }
        break;
}
count[wave]--;

if(count[wave] &lt;= 0){
    wave++;
    if(wave &gt; wave_max){
        wave = 0;
    }
}

/*
alarm[0] = spawn_delay;

if(fast &lt;= 0){
    tmp = instance_create(x,y,enemy_o);
    tmp.hp = 20;
    tmp.spd = 4;
    with(tmp){
        path_start(path0, spd, 0, 0);
    }
    fast = fast_count;
}
else if(slow &lt;= 0){
    tmp = instance_create(x,y,enemy_o);
    tmp.hp = 50;
    tmp.spd = 1;
    with(tmp){
        path_start(path0, spd, 0, 0);
    }
    slow = slow_count;
}
else if(tank &lt;= 0){
    tmp = instance_create(x,y,enemy_o);
    tmp.hp = 200;
    tmp.spd = .5;
    with(tmp){
        path_start(path0, spd, 0, 0);
    }
    tank = tank_count;
}
else{
    instance_create(x,y,enemy_o);
}

fast--;
slow--;
tank--;
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
